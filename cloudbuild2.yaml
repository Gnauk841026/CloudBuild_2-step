steps:
- name: 'gcr.io/cloud-builders/gcloud'
  entrypoint: 'bash'
  args:
  - '-c'
  - |
    set -e
    set -x
    
    # 決定要部署的 image
    if [ -n "$_SPECIFIED_IMAGE" ]; then
      deploy_image="$_SPECIFIED_IMAGE"
    else
      # 使用更可靠的方法獲取最新的鏡像標籤
      latest_tag=$(gcloud artifacts docker images list asia-east1-docker.pkg.dev/terraform-429505/my-registry/hello-js \
        --format='value(tags)' \
        --sort-by=~timestamp \
        --limit=1 \
        | tr ',' '\n' | sort -V | tail -n 1)
      
      deploy_image="asia-east1-docker.pkg.dev/terraform-429505/my-registry/hello-js:$latest_tag"
    fi
    
    echo "正在部署鏡像: $deploy_image"
    
    # ... [其餘部分保持不變]
    
    # 連接到 VM 並執行部署腳本
    ssh -i /root/.ssh/id_rsa -o StrictHostKeyChecking=no lucifer_suriel@34.81.254.154 << EOF
      set -e
      set -x
      
      # ... [其餘部分保持不變]
      
      # 強制重新拉取新的映像，忽略本地緩存
      sudo -E docker pull --no-cache $deploy_image
      
      # 運行新容器
      if sudo docker run -d --name hello-js -p 80:8080 $deploy_image; then
        echo "新容器成功啟動"
        
        # ... [其餘部分保持不變]
      
      # 顯示容器日誌
      sudo docker logs hello-js
    EOF

substitutions:
  _SPECIFIED_IMAGE: ''
timeout: '1200s'
options:
  defaultLogsBucketBehavior: REGIONAL_USER_OWNED_BUCKET
